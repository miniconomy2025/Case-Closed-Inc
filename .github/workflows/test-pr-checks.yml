name: Integration Tests

on:
  pull_request:
    branches:
      - "**" # Runs on PRs to any branch
    paths:
      - "server/**"
      - "mock/**"
      - ".github/workflows/integration-tests.yml"

jobs:
  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest

    services:
      # PostgreSQL test database
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: case_closed_test_db
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: server/package-lock.json

      - name: Install server dependencies
        working-directory: ./server
        run: npm ci

      - name: Install mock service dependencies
        run: |
          cd mock/commercial-bank && npm ci
          cd ../hand && npm ci
          cd ../bulk-logistics && npm ci

      - name: Start mock services in background
        run: |
          cd mock/commercial-bank && node index.js &
          cd mock/hand && node index.js &
          cd mock/bulk-logistics && node index.js &
          sleep 5 # Give services time to start

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5433 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Run integration tests
        working-directory: ./server
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 5433
          DB_USER: postgres
          DB_PASSWORD: password
          DB_NAME: case_closed_test_db
          TEST_DB_HOST: localhost
          TEST_DB_PORT: 5433
          TEST_DB_USER: postgres
          TEST_DB_PASSWORD: password
          TEST_DB_NAME: case_closed_test_db
        run: npm run test:integration

      # - name: Upload test results
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #       name: integration-test-results
      #       path: server/coverage/
      #       retention-days: 7

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: server/package-lock.json

      - name: Install dependencies
        working-directory: ./server
        run: npm ci

      - name: Run unit tests
        working-directory: ./server
        run: npm run test:unit

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: server/coverage/
          retention-days: 7

  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: server/package-lock.json

      - name: Install dependencies
        working-directory: ./server
        run: npm ci

      - name: Run linter (if configured)
        working-directory: ./server
        run: npm run lint --if-present
        continue-on-error: true

  pr-status-check:
    name: PR Status Check
    runs-on: ubuntu-latest
    needs: [integration-tests, unit-tests]
    if: always()

    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.integration-tests.result }}" != "success" ] || [ "${{ needs.unit-tests.result }}" != "success" ]; then
            echo "‚ùå Tests failed! Please fix the issues before merging."
            exit 1
          else
            echo "‚úÖ All tests passed! PR is ready for review."
          fi

      - name: Comment PR with results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const integrationStatus = '${{ needs.integration-tests.result }}' === 'success' ? '‚úÖ Passed' : '‚ùå Failed';
            const unitStatus = '${{ needs.unit-tests.result }}' === 'success' ? '‚úÖ Passed' : '‚ùå Failed';

            const comment = `## üß™ Test Results

            | Test Suite | Status |
            |------------|--------|
            | Integration Tests | ${integrationStatus} |
            | Unit Tests | ${unitStatus} |

            ${integrationStatus.includes('‚úÖ') && unitStatus.includes('‚úÖ') ? '**All tests passed! This PR is ready for review.** üéâ' : '**Some tests failed. Please review and fix the issues.**'}
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
